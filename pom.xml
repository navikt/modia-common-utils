<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.navikt.modia-common-utils</groupId>
    <artifactId>modia-common-utils</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>crypto</module>
        <module>kotlin-utils</module>
        <module>ktor-utils</module>
        <module>test-utils</module>
        <module>typeanalyzer</module>
        <module>kabac</module>
        <module>logging</module>
        <module>science</module>
    </modules>
    <packaging>pom</packaging>
    <name>modia-common-utils</name>

    <properties>
        <kotlin.version>1.9.23</kotlin.version>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <kotlinx.serialization.version>1.6.3</kotlinx.serialization.version>
        <ktor.version>2.3.11</ktor.version>
        <java.version>11</java.version>
        <prometheus.version>1.13.0</prometheus.version>
        <logback.version>1.5.6</logback.version>
        <slf4j.version>2.0.13</slf4j.version>
        <logstash.version>7.4</logstash.version>
        <jackson.version>2.17.0</jackson.version>
        <junit.version>5.10.2</junit.version>
        <mockk.version>1.13.11</mockk.version>
    </properties>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <organization>NAV (Arbeids- og velferdsdirektoratet) - The Norwegian Labour and Welfare Administration</organization>
            <organizationUrl>https://www.nav.no</organizationUrl>
        </developer>
    </developers>
    <distributionManagement>
        <repository>
            <id>github</id>
            <url>https://maven.pkg.github.com/navikt/modia-common-utils</url>
        </repository>
    </distributionManagement>
    <scm>
        <developerConnection>scm:git:git@github.com:navikt/modia-common-utils.git</developerConnection>
        <connection>scm:git:git@github.com:navikt/modia-common-utils.git</connection>
        <url>https://github.com/navikt/modia-common-utils</url>
        <tag>HEAD</tag>
    </scm>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-bom</artifactId>
                <version>${kotlin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-serialization-json</artifactId>
                <version>${kotlinx.serialization.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13.2</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-bom</artifactId>
                <version>${ktor.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>6.0.0</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash.version}</version>
            </dependency>


            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-core</artifactId>
                <version>1.8.0</version>
            </dependency>

            <!-- Testing dependencies -->
            <dependency>
                <groupId>io.mockk</groupId>
                <artifactId>mockk-jvm</artifactId>
                <version>${mockk.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>${java.version}</jvmTarget>
                    <compilerPlugins>
                        <plugin>kotlinx-serialization</plugin>
                    </compilerPlugins>
                    <args>
                        <arg>-Xcontext-receivers</arg>
                    </args>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-serialization</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>include-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <!-- https://github.com/mockk/mockk/issues/681#issuecomment-1297467111 -->
                    <argLine>
                        --add-opens java.base/java.util=ALL-UNNAMED
                        --add-opens java.base/java.lang.reflect=ALL-UNNAMED <!-- handy for spying spring proxies -->
                    </argLine>

                    <!--
                    Å sette `reuseFork` til `true` vil føre til at surefire fyrer opp en separat JVM for hver
                    eneste testklasse.
                    Dette fører til ekstremt treg eksekvering av tester (i ett tilfelle 4-5 min kontra
                    20-30 sekunder om satt til `false`)
                    Merk at å sette denne til `true` krever at man skriver tester som er godt isolerte fra hverandre.
                    F.eks. kan det føre til problemer å sette statiske eller globale felter i klasser
                    som gjenbrukes på tvers av testmetoder. Sørg for å lage en ny instanse av slike felter for hver
                    testmetode ved bruk av @BeforeEach (JUnit 5) eller lignende for å unngå tilstandsfulle testklasser.
                    Se følgende link for flere detaljer:
                    https://maven.apache.org/surefire/maven-surefire-plugin/examples/ fork-options-and-parallel-execution.html
                    -->
                    <reuseForks>false</reuseForks>

                    <forkCount>1C</forkCount> <!-- fyr opp 1 JVM per cpu-kjerne -->


                    <!-- fjerner edge-caser ved nøstede classloadere, som f.eks. hvis man tester med jetty -->
                    <useSystemClassLoader>false</useSystemClassLoader>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
